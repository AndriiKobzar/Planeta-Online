@model Planeta_Online.Models.EventApplicationViewModel
    <script type="text/javascript">
    function goFurther() {
        if (document.getElementById("chkAgree").checked == true)
            document.getElementById("btnSubmit").disabled = false;
        else
            document.getElementById("btnSubmit").disabled = true;
    }
    </script>
<script type="text/javascript" src="~/Scripts/jQueryUI-datepicker-UA.js"></script>
@{
    ViewBag.Title = "Заявка";
}
@Html.Partial("_EventPartial")
<h2>Створення заходу</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary()<!--For general validation errors-->
        <!--Organiser-->
        <div class="form-group">
            @Html.LabelFor(model => model.CreatorName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatorName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatorName, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--Organiser Email-->
        <div class="form-group">
            @Html.LabelFor(model => model.CreatorEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatorEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatorEmail, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--Organiser Phone-->
        <div class="form-group">
            @Html.LabelFor(model => model.CreatorPhone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatorPhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatorPhone, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--Event Name-->
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--Event description-->
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <!--Begin date-->
        <div class="form-group">
            @Html.LabelFor(model => model.FromDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FromDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FromDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--Begin time-->
        <div class="form-group">
            @Html.LabelFor(model => model.FromTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FromTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FromTime, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--End date-->
        <div class="form-group">
            @Html.LabelFor(model => model.TillDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TillDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TillDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--End time-->
        <div class="form-group">
            @Html.LabelFor(model => model.TillTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TillTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TillTime, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Attachment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Attachment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Attachment, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Agreed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Agreed, new { htmlAttributes = new { @class = "form-control", @id = "chkAgree", @onclick="goFurther()"} })
                @Html.ValidationMessageFor(model => model.Agreed, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Подати заявку" class="btn btn-default" id="btnSubmit" disabled="disabled" />
            </div>
        </div>

        </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
